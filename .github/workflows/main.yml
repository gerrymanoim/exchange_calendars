name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-python@v6
    - uses: pre-commit/action@v3.0.1

  build-and-test:
    needs: pre-commit
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.13"]

    steps:
    - uses: actions/checkout@v5
    - name: Install uv and set the Python version
      uses: astral-sh/setup-uv@v7
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install the project
      run: uv sync --locked --group test --no-dev --no-cache

    - if: runner.os != 'Windows'
      name: Set up Python tzdata on Linux and macOS
      run: |
        PYTHONTZPATH=$(python -c "import os; print(os.path.dirname(os.__file__))")
        echo "PYTHONTZPATH=$PYTHONTZPATH" >> $GITHUB_ENV
    - if: runner.os == 'Windows'
      name: Set up Python tzdata on Windows
      run: |
        $PYTHONTZPATH = python -c "import os; print(os.path.dirname(os.__file__))"
        echo "PYTHONTZPATH=$PYTHONTZPATH" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Test with pytest
      run: uv run -- pytest tests -n auto --dist loadscope

    - name: Set up minimum environment and run tests
      shell: bash
      run: |
        if [ "${{ matrix.python-version }}" == "3.13" ]; then
          GROUP="test_py13"
        else
          GROUP="test_min"
        fi
        uv lock --resolution lowest-direct
        uv sync --frozen --resolution lowest-direct --group "$GROUP" --no-dev --no-cache
        uv run --frozen --resolution lowest-direct --group "$GROUP" -- pytest tests -n auto --dist loadscope
        uv pip list
